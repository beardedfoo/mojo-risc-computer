module ioshield_debugger (
    input clk,  // clock
    input rst,  // reset
    input io_button[5],
    input io_dip[3][8],
    input debug_imm7[7],
    input debug_imm10[10],
    input debug_data[16],
    input debug_registers[8][16],
    input debug_regA[3],
    input debug_regB[3],
    input debug_regC[3],
    input debug_address[16],
    input debug_opcode[3],
    input exception,
    output io_seg[8],
    output io_sel[4],
    output io_led[3][8],
    output led[8],
    output run
  ) {
  .clk(clk) {
    // Condition the step button input and watch for rising edges
    button_press_event center_btn_event;
    button_press_event up_btn_event;
    button_press_event down_btn_event;
    button_press_event left_btn_event;
    button_press_event right_btn_event;
    
    .rst(rst)  {
      fsm register_submode = {PC, R0, R1, R2, R3, R4, R5, R6, R7};
      fsm decoder_submode = {OP, REG_A, REG_B, REG_C};
      dff mode_switch_timeout[25];
      fsm state = {MENU, REGISTER, DECODER};
      ioshield_seven_segment_controller seg;
    }
  }
  
  const MODE_STABLE = 0;
  const MODE_CHANGED = 1;
    
  always {
    // Map the buttons to their event processors
    up_btn_event.in = io_button[0];
    center_btn_event.in = io_button[1];
    down_btn_event.in = io_button[2];
    left_btn_event.in = io_button[3];
    right_btn_event.in = io_button[4];
    
    led = 8h0;
    run = 0;
    
    // Show the debug address on the 7 segment display    
    io_seg = seg.io_seg;
    io_sel = seg.io_sel;
    seg.data = 4x{8h0};
    seg.display_mode = 4b0000;
    seg.ascii_data = 4x{{8h0}};
    seg.blink = 0;
    io_led = 3x{{8h0}};
    
    // Increment a counter until it rolls around to zero
    if (mode_switch_timeout.q != MODE_STABLE) {
      mode_switch_timeout.d = mode_switch_timeout.q + 1;
    }
    
    case (state.q) {        
      state.MENU:
        seg.ascii_data[3] = "r";
        seg.ascii_data[2] = "u";
        seg.ascii_data[1] = "n";
        seg.ascii_data[0] = " ";
        seg.display_mode = 4b1111;
        
        // When the right button is pressed change to the next mode and reset the counter
        if (right_btn_event.pressed) {
          state.d = state.REGISTER;
          mode_switch_timeout.d = MODE_CHANGED;
        }
      
      state.REGISTER:
        case (register_submode.q) {
          register_submode.PC:
            if (mode_switch_timeout.q != MODE_STABLE) {
              seg.ascii_data[3] = "p";
              seg.ascii_data[2] = "c";
              seg.ascii_data[1] = " ";
              seg.ascii_data[0] = " ";
              seg.display_mode = 4b1111;
            } else {
              seg.data = debug_address;  
            }
              
            // Show the debug data bus on the leds
            io_led[0] = debug_address[7:0];
            io_led[1] = debug_address[15:8];
            
            if (down_btn_event.pressed) {
              register_submode.d = register_submode.R0;
              mode_switch_timeout.d = MODE_CHANGED;
            }
            
          register_submode.R0:
            if (mode_switch_timeout.q != MODE_STABLE) {
              seg.ascii_data[3] = "r";
              seg.ascii_data[1] = " ";
              seg.ascii_data[0] = " ";
              seg.display_mode = 4b1011;
              seg.data = 16h0000;
            } else {
              seg.data = debug_registers[0];
            }
            
            io_led[0][0] = 1;
            
            if (up_btn_event.pressed) {
              register_submode.d = register_submode.PC;
              mode_switch_timeout.d = MODE_CHANGED;
            }
            
            if (down_btn_event.pressed) {
              register_submode.d = register_submode.R1;
              mode_switch_timeout.d = MODE_CHANGED;
            }
            
          register_submode.R1:
            if (mode_switch_timeout.q != MODE_STABLE) {
              seg.ascii_data[3] = "r";
              seg.ascii_data[1] = " ";
              seg.ascii_data[0] = " ";
              seg.display_mode = 4b1011;
              seg.data = 16h0100;
            } else {
              seg.data = debug_registers[1];
            }
            
            io_led[0][1] = 1;
            
            if (up_btn_event.pressed) {
              register_submode.d = register_submode.R0;
              mode_switch_timeout.d = MODE_CHANGED;
            }
            
            if (down_btn_event.pressed) {
              register_submode.d = register_submode.R2;
              mode_switch_timeout.d = MODE_CHANGED;
            }
            
          register_submode.R2:
            if (mode_switch_timeout.q != MODE_STABLE) {
              seg.ascii_data[3] = "r";
              seg.ascii_data[1] = " ";
              seg.ascii_data[0] = " ";
              seg.display_mode = 4b1011;
              seg.data = 16h0200;
            } else {
              seg.data = debug_registers[2];
            }
            
            io_led[0][2] = 1;
            
            if (up_btn_event.pressed) {
              register_submode.d = register_submode.R1;
              mode_switch_timeout.d = MODE_CHANGED;
            }
            
            if (down_btn_event.pressed) {
              register_submode.d = register_submode.R3;
              mode_switch_timeout.d = MODE_CHANGED;
            }
            
          register_submode.R3:
            if (mode_switch_timeout.q != MODE_STABLE) {
              seg.ascii_data[3] = "r";
              seg.ascii_data[1] = " ";
              seg.ascii_data[0] = " ";
              seg.display_mode = 4b1011;
              seg.data = 16h0300;
            } else {
              seg.data = debug_registers[3];
            }
            
            io_led[0][3] = 1;
            
            if (up_btn_event.pressed) {
              register_submode.d = register_submode.R2;
              mode_switch_timeout.d = MODE_CHANGED;
            }
            
            if (down_btn_event.pressed) {
              register_submode.d = register_submode.R4;
              mode_switch_timeout.d = MODE_CHANGED;
            }
            
          register_submode.R4:
            if (mode_switch_timeout.q != MODE_STABLE) {
              seg.ascii_data[3] = "r";
              seg.ascii_data[1] = " ";
              seg.ascii_data[0] = " ";
              seg.display_mode = 4b1011;
              seg.data = 16h0400;
            } else {
              seg.data = debug_registers[4];
            }
            
            io_led[0][4] = 1;
            
            if (up_btn_event.pressed) {
              register_submode.d = register_submode.R3;
              mode_switch_timeout.d = MODE_CHANGED;
            }
            
            if (down_btn_event.pressed) {
              register_submode.d = register_submode.R5;
              mode_switch_timeout.d = MODE_CHANGED;
            }
            
          register_submode.R5:
            if (mode_switch_timeout.q != MODE_STABLE) {
              seg.ascii_data[3] = "r";
              seg.ascii_data[1] = " ";
              seg.ascii_data[0] = " ";
              seg.display_mode = 4b1011;
              seg.data = 16h0500;
            } else {
              seg.data = debug_registers[5];
            }
            
            io_led[0][5] = 1;
            
            if (up_btn_event.pressed) {
              register_submode.d = register_submode.R4;
              mode_switch_timeout.d = MODE_CHANGED;
            }
            
            if (down_btn_event.pressed) {
              register_submode.d = register_submode.R6;
              mode_switch_timeout.d = MODE_CHANGED;
            }
            
          register_submode.R6:
            if (mode_switch_timeout.q != MODE_STABLE) {
              seg.ascii_data[3] = "r";
              seg.ascii_data[1] = " ";
              seg.ascii_data[0] = " ";
              seg.display_mode = 4b1011;
              seg.data = 16h0600;
            } else {
              seg.data = debug_registers[6];
            }
            
            io_led[0][6] = 1;
            
            if (up_btn_event.pressed) {
              register_submode.d = register_submode.R5;
              mode_switch_timeout.d = MODE_CHANGED;
            }
            
            if (down_btn_event.pressed) {
              register_submode.d = register_submode.R7;
              mode_switch_timeout.d = MODE_CHANGED;
            }
            
          register_submode.R7:
            if (mode_switch_timeout.q != MODE_STABLE) {
              seg.ascii_data[3] = "r";
              seg.ascii_data[1] = " ";
              seg.ascii_data[0] = " ";
              seg.display_mode = 4b1011;
              seg.data = 16h0700;
            } else {
              seg.data = debug_registers[7];
            }
            
            io_led[0][7] = 1;
            
            if (up_btn_event.pressed) {
              register_submode.d = register_submode.R6;
              mode_switch_timeout.d = MODE_CHANGED;
            }
        }
        
        // When the left button is pressed change to the previous mode
        if (left_btn_event.pressed) {
          state.d = state.MENU;
          mode_switch_timeout.d = MODE_CHANGED;
        }
        
        // When the right button is pressed change to the next mode
        if (right_btn_event.pressed) {
          state.d = state.DECODER;
          mode_switch_timeout.d = MODE_CHANGED;
        }
        
      state.DECODER:
        case (decoder_submode.q) {
          decoder_submode.OP:
            seg.ascii_data[3] = "o";
            seg.ascii_data[2] = "p";
            seg.ascii_data[1] = " ";
            seg.display_mode = 4b1110;
            seg.data = debug_opcode;
            
            if (down_btn_event.pressed) {
              decoder_submode.d = decoder_submode.REG_A;
            }
            
          decoder_submode.REG_A:
            seg.ascii_data[3] = "r";
            seg.ascii_data[2] = "a";
            seg.ascii_data[1] = " ";
            seg.display_mode = 4b1110;
            seg.data = debug_regA;
            
            if (up_btn_event.pressed) {
              decoder_submode.d = decoder_submode.OP;
            }
            
            
            if (down_btn_event.pressed) {
              decoder_submode.d = decoder_submode.REG_B;
            }
            
          decoder_submode.REG_B:
            seg.ascii_data[3] = "r";
            seg.ascii_data[2] = "b";
            seg.ascii_data[1] = " ";
            seg.display_mode = 4b1110;
            seg.data = debug_regB;
            
            if (up_btn_event.pressed) {
              decoder_submode.d = decoder_submode.REG_A;
            }
            
            
            if (down_btn_event.pressed) {
              decoder_submode.d = decoder_submode.REG_C;
            }
            
          decoder_submode.REG_C:
            seg.ascii_data[3] = "r";
            seg.ascii_data[2] = "c";
            seg.ascii_data[1] = " ";
            seg.display_mode = 4b1110;
            seg.data = debug_regC;
            
            if (up_btn_event.pressed) {
              decoder_submode.d = decoder_submode.REG_B;
            }
        }
        
        // When the left button is pressed change to the previous mode
        if (left_btn_event.pressed) {
          state.d = state.REGISTER;
          mode_switch_timeout.d = MODE_CHANGED;
        }
    }
    
    if (exception) {
      seg.blink = 1;
    }
  }
}
